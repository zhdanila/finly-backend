// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/budget/repository.go
//
// Generated by this command:
//
//	mockgen -source=internal/repository/budget/repository.go -destination=internal/repository/budget/mock/mock_budget.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	domain "finly-backend/internal/domain"
	reflect "reflect"

	sqlx "github.com/jmoiron/sqlx"
	gomock "go.uber.org/mock/gomock"
)

// MockBudget is a mock of Budget interface.
type MockBudget struct {
	ctrl     *gomock.Controller
	recorder *MockBudgetMockRecorder
	isgomock struct{}
}

// MockBudgetMockRecorder is the mock recorder for MockBudget.
type MockBudgetMockRecorder struct {
	mock *MockBudget
}

// NewMockBudget creates a new mock instance.
func NewMockBudget(ctrl *gomock.Controller) *MockBudget {
	mock := &MockBudget{ctrl: ctrl}
	mock.recorder = &MockBudgetMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBudget) EXPECT() *MockBudgetMockRecorder {
	return m.recorder
}

// CreateTX mocks base method.
func (m *MockBudget) CreateTX(ctx context.Context, tx *sqlx.Tx, userID, currency string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTX", ctx, tx, userID, currency)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTX indicates an expected call of CreateTX.
func (mr *MockBudgetMockRecorder) CreateTX(ctx, tx, userID, currency any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTX", reflect.TypeOf((*MockBudget)(nil).CreateTX), ctx, tx, userID, currency)
}

// GetByUserID mocks base method.
func (m *MockBudget) GetByUserID(ctx context.Context, userID string) (*domain.Budget, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByUserID", ctx, userID)
	ret0, _ := ret[0].(*domain.Budget)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByUserID indicates an expected call of GetByUserID.
func (mr *MockBudgetMockRecorder) GetByUserID(ctx, userID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUserID", reflect.TypeOf((*MockBudget)(nil).GetByUserID), ctx, userID)
}

// GetDB mocks base method.
func (m *MockBudget) GetDB() *sqlx.DB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDB")
	ret0, _ := ret[0].(*sqlx.DB)
	return ret0
}

// GetDB indicates an expected call of GetDB.
func (mr *MockBudgetMockRecorder) GetDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDB", reflect.TypeOf((*MockBudget)(nil).GetDB))
}
